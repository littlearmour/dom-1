{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  create(string) {\r\n    //用于新增节点\r\n    const container = document.createElement(\"template\"); //template内容模板元素\r\n    container.innerHTML = string.trim(); //trim 把字符串两边的文本去掉\r\n    return container.content.firstChild;\r\n  },\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling); //找到这个节点的爸爸，然后调用爸爸的insertBefore的方法，把node2插到node下一个节点。若node为最后一个节点，也可以插入，值为null\r\n  },\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node); //节点前面插入\r\n  },\r\n  append(parent, node) {\r\n    parent.appendChild(node); //用于节点新增一个儿子\r\n  },\r\n  wrap(node, parent) {\r\n    dom.before(node, parent);\r\n    //先把新的节点放到原节点的前面;\r\n    dom.append(parent, node); //然后吧原节点放到新的节点里面\r\n  },\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node; //返回移除的对象\r\n  },\r\n  empty(node) {\r\n    //用于删除后代，所有的\r\n    const { childNodes } = node; //const childNodes = node.childNodes\r\n    const array = [];\r\n    // for (let i = 0; i < childNodes.length; i++) {\r\n    //   dom.remove(childNodes[i]);长度会跟随着一起变化7-6-5\r\n    //   array.push(childNodes[i]);\r\n    // }\r\n    // return array;\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild));\r\n      x = node.firstChild;\r\n    }\r\n    return array;\r\n  },\r\n  attr(node, name, value) {\r\n    //重载   用于读写属性\r\n    if (arguments.length === 3) {\r\n      //参数个数等于3\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n  },\r\n  text(node, string) {\r\n    //用于读写文本内容   适配\r\n    if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        node.innerText = string;\r\n      } else {\r\n        node.textContent = string;\r\n      }\r\n    } else if (arguments.length) {\r\n      if (\"innerText\" in node) {\r\n        return node.innerText;\r\n      } else {\r\n        return node.textContent;\r\n      }\r\n    }\r\n  },\r\n  html(node, string) {\r\n    //用于读写HTML内容\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    } else {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  style(node, name, value) {\r\n    //用于修改style\r\n    if (arguments.length === 3) {\r\n      //dom.style(div,'color','red')\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        //dom.style(div,'color')\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        //dom.style(div,{color:'red'})\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    //class是个对象\r\n    add(node, className) {\r\n      //添加class\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      //删除class\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      //有没有class\r\n      return node.classList.contains(className);\r\n    },\r\n  },\r\n  on(node, eventName, fn) {\r\n    //用于添加监听事件\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  off(node, eventName, fn) {\r\n    //用于删除监听事件\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n  find(selector, scope) {\r\n    //scope范围\r\n    return (scope || document).querySelectorAll(selector);\r\n  },\r\n  parent(node) {\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter((n) => n !== node); //filter过滤器\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      //x存在而且x.nodeType为文本，\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      //x存在而且x.nodeType为文本，\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  each(nodeList, fn) {\r\n    //用于遍历所有节点\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    //用于获取排行第几\r\n    const list = dom.children(node.parentNode); //获取爸爸的所有儿子\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  },\r\n};\r\n"]}